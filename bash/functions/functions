# ----------------------------------------------------
#   Remote Tracking Branch
#   -> Creates a new branch and pushes that branch to remote
# ----------------------------------------------------
#
# $1 - the branch name
#
# Usage: `git_remote_tracking_branch fix_sign_up_form_styles`
#

function git_remote_tracking_branch() {
  git checkout -b $1 && git push -u origin $1
}

# ----------------------------------------------------
#   Git Delete Branch For Real
#   -> Delete both local and remote copies of a branch
# ----------------------------------------------------
#
# $1 - the branch name
#
# Usage: `git_delete_branch_for_real fix_form_styles`
#

function git_delete_branch_for_real() {
  git branch -D $1 && git push origin :$1
}

# ----------------------------------------------------
#   Find Alias
#   -> Greps for an alias
# ----------------------------------------------------
#
# $1 - the alias name
#
# Usage: `find_alias 'gba'`
#

function find_alias() {
  alias | grep "alias\s$1"
}

# ----------------------------------------------------
#   Find Alias
#   -> Greps for an alias
# ----------------------------------------------------

function sublime() {
  # If arguments exist, use the default behavior
  if [ $# -gt 0 ]; then
    subl "$@"

  # If no arguments exist...
  else
    ls -1 *.sublime-project &> /dev/null

    # If a .sublime-project file exists, open that
    if [ "$?" -eq 0 ]; then
      subl "$(ls -1 *.sublime-project)"

    # Otherwise, open the current directory
    else
      subl .
    fi
  fi
}

# ----------------------------------------------------
#   Dispatch
#   -> Runs scripts for js.com
# ----------------------------------------------------

function dispatch() {

  if [ "$DISPATCHED" != "1" ]; then

    # JavaScript.com

    if [ "$( pwd )" == "$HOME/Projects/cs/JavaScript.com" ]; then
      . .service-credentials
      nvm use iojs-v1.2.0 &> /dev/null

      DISPATCHED="1"
    fi

  fi

}

# ----------------------------------------------------
#   Prompt Command
# ----------------------------------------------------

PROMPT_COMMAND+='; dispatch'


# ----------------------------------------------------
#   Automatically change node version based on .nvmrc
#
#   Based on https://github.com/creationix/nvm/issues/603#issuecomment-88617225
# ----------------------------------------------------

nvm_auto_switch() {
  local NVM_RC_FILE
  local DEFAULT_VERSION
  local NVM_VERSION
  NVM_RC_FILE=`nvm_find_nvmrc`

  if [ "$NVM_RC_FILE"  == "" ]; then
    DEFAULT_VERSION="$(nvm_alias default 2>/dev/null || echo)"
    NVM_VERSION="$(nvm_version $DEFAULT_VERSION)"
  else
    NVM_VERSION=`cat "$NVM_RC_FILE"`
  fi

  [ "$(nvm_version_path $NVM_VERSION)/bin" == "$NVM_BIN" ] || nvm use "$NVM_VERSION"
}

alias ll='ls -lah'
cd() { builtin cd "$@"; nvm_auto_switch; ll; }